function dets = helperAssembleDetections(xcvrLLR,time,meas,noise,snrdB)
% This function is for demo purposes only and may be removed in the future

%#codegen
%   Copyright 2021-2022 The MathWorks, Inc.

[numMeas,numDets] = size(meas);
objAttrib = struct( ...
    'TargetIndex',NaN, ...
    'SNR',NaN);
[rot,off] = helperSensorFrame(xcvrLLR);
mp = struct( ...
    'Frame','Spherical', ...
    'OriginPosition', off(:)', ...
    'OriginVelocity',zeros(1,3), ...
    'Orientation',rot, ...
    'IsParentToChild',false, ...
    'HasAzimuth',true, ...    % We use a ULA, so azimuth is measured
    'HasElevation',false, ... % We can't measure elevation, we'd need something other than a ULA to do that
    'HasRange',true, ...      % We measure range (that is almost always true)
    'HasVelocity',true);      % We measure velocity since we have multiple pulses/sweeps in our waveform
dets = repmat({objectDetection(time,zeros(numMeas,1,'like',meas), ...
    'SensorIndex',1, ...      % Trackers require unique sensor IDs to ensure that no more than one detection is assigned to a single track for each sensor
    'MeasurementParameters',mp, ...
    'ObjectAttributes',{objAttrib})},numDets,1);
for iDet = 1:numDets
    dets{iDet}.Measurement(:) = meas(:,iDet);
    dets{iDet}.MeasurementNoise(:,:) = diag(noise(:,iDet));
    dets{iDet}.ObjectAttributes{1}.SNR = snrdB(iDet);
end
end
